#!/bin/bash

set -euo pipefail

# config
CERT_DIR="$HOME/.certs"
DOCKER_CERT_DIR="/etc/docker/certs.d"
IP="192.168.86.100"
HOST="domain.tld"
COUNTRY="SG"
STATE=""
CITY=""
ORGANIZATION=""
ORGANIZATION_UNIT=""
COMMON_NAME=$HOST
EMAIL=""

if [ -d "$CERT_DIR" ]; then
	cp -r "$CERT_DIR" "$CERT_DIR.bak"
fi

mkdir -p "$CERT_DIR" && cd "$CERT_DIR"

# generate CA key
openssl genrsa -aes256 -out ca-key.pem 4096
# generate CA
openssl req -subj "/CN=$HOST" -new -x509 -days 365 -key ca-key.pem -sha256 \
	-out ca.pem  \
	-subj "/C=$COUNTRY/ST=$STATE/L=$CITY/O=$ORGANIZATION/OU=$ORGANIZATION_UNIT/CN=$COMMON_NAME/emailAddress=$EMAIL"

# server

# generate server key
openssl genrsa -out server-key.pem 4096
# generate server cert
openssl req -subj "/CN=$HOST" -sha256 -new -key server-key.pem -out server.csr

echo subjectAltName = DNS:$HOST,IP:$IP,IP:127.0.0.1 >> extfile.cnf
echo extendedKeyUsage = serverAuth >> extfile.cnf

openssl x509 -req -days 365 -sha256 -in server.csr \
	-CA ca.pem -CAkey ca-key.pem -CAcreateserial \
	-out server-cert.pem \
	-extfile extfile.cnf

# client
openssl genrsa -out key.pem 4096
openssl req -subj '/CN=client' -new -key key.pem -out client.csr

echo extendedKeyUsage = clientAuth > extfile-client.cnf

openssl x509 -req -days 365 -sha256 -in client.csr \
	-CA ca.pem -CAkey ca-key.pem -CAcreateserial \
	-out cert.pem  \
	-extfile extfile-client.cnf

# clean up
rm -v client.csr server.csr extfile.cnf extfile-client.cnf
chmod -v 0400 ca-key.pem key.pem server-key.pem
chmod -v 0444 ca.pem server-cert.pem cert.pem
chmod -v 0700 $CERT_DIR

echo -e "\e[1;32mCertificate generation completed.\e[0m"

# add to Docker daemon
# mkdir -p $DOCKER_CERT_DIR
# cp ca.pem server-cert.pem server-key.pem $DOCKER_CERT_DIR

# cat <<EOF > /etc/docker/daemon.json
# {
#   "debug": true,
#   "tlsverify": true,
#   "tlscacert": "$DOCKER_CERT_DIR/ca.pem",
#   "tlscert": "$DOCKER_CERT_DIR/server-cert.pem",
#   "tlskey": "$DOCKER_CERT_DIR/server-key.pem",
#   "hosts": ["tcp://0.0.0.0:2376", "unix:///var/run/docker.sock"]
# }
# EOF

# test connection
# echo "docker -H $IP:2376 --tlsverify --tlscacert $CERT_DIR/ca.pem --tlscert
# $CERT_DIR/cert.pem --tlskey $CERT_DIR/key.pem ps -a"

